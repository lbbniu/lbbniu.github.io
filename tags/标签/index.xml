<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>标签 on lbbniu</title><link>/tags/%E6%A0%87%E7%AD%BE/</link><description>Recent content in 标签 on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Mon, 15 Jan 2024 15:20:00 +0800</lastBuildDate><atom:link href="/tags/%E6%A0%87%E7%AD%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>模板-标题</title><link>/2024/01/15/uri-addr/</link><pubDate>Mon, 15 Jan 2024 15:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2024/01/15/uri-addr/</guid><description>关注公众号获得更多精彩文章</description></item><item><title>一篇文章精通php多版本管理工具：phpbrew</title><link>/2023/01/04/phpbrew/</link><pubDate>Wed, 04 Jan 2023 22:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2023/01/04/phpbrew/</guid><description>phpbrew是一个工具，可以在$HOME目录中构建和安装多个PHP版本。
phpbrew的功能包括：
将配置选项简化为变体，不再担心路径问题。 使用不同的变体构建PHP，如PDO、mysql、sqlite、debug等。 编译Apache PHP模块，并按不同版本分开。 在个人目录中构建和安装PHP，无需root权限。 轻松切换版本，与bash/zsh shell集成。 自动功能检测。 轻松在当前环境中安装和启用PHP扩展。 在系统范围内安装多个PHP。 针对HomeBrew和MacPorts的路径检测优化。 要求 请查看 Requirement 在开始之前。你需要安装一些用于构建 PHP 的开发包。
安装 只需下载它：
curl -L -O https://github.com/phpbrew/phpbrew/releases/latest/download/phpbrew.phar chmod +x phpbrew.phar 然后，你可以将其安装到 bin 文件夹中：
sudo mv phpbrew.phar /usr/local/bin/phpbrew 确保在你的 $PATH 环境变量中有 /usr/local/bin。
设置 初始化一个用于你的 shell 环境的 bash 脚本：
phpbrew init 将以下行添加到你的 .bashrc 或 .zshrc 文件：
[[ -e ~/.phpbrew/bashrc ]] &amp;amp;&amp;amp; source ~/.phpbrew/bashrc 设置查找前缀 你可以设置你首选的用于查找库的默认前缀，可用选项有 macports、homebrew、debian、ubuntu 或自定义路径：
对于 Homebrew 用户：
phpbrew lookup-prefix homebrew 对于 Macports 用户：
phpbrew lookup-prefix macports 基本用法 列出已知版本：</description></item><item><title>hugoio</title><link>/2022/02/15/uri-addr/</link><pubDate>Tue, 15 Feb 2022 15:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2022/02/15/uri-addr/</guid><description>https://github.com/gohugoio/hugo/blob/0f8dc47037/hugolib/page__meta.go for k, v := range frontmatter { loki := strings.ToLower(k) if loki == &amp;quot;published&amp;quot; { // Intentionally undocumented vv, err := cast.ToBoolE(v) if err == nil { published = &amp;amp;vv } // published may also be a date continue } if pm.s.frontmatterHandler.IsDateKey(loki) { continue } switch loki { case &amp;quot;title&amp;quot;: pm.title = cast.ToString(v) pm.params[loki] = pm.title case &amp;quot;linktitle&amp;quot;: pm.linkTitle = cast.ToString(v) pm.params[loki] = pm.linkTitle case &amp;quot;summary&amp;quot;: pm.summary = cast.ToString(v) pm.params[loki] = pm.summary case &amp;quot;description&amp;quot;: pm.</description></item></channel></rss>