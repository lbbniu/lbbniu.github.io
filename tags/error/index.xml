<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>error on lbbniu</title><link>/tags/error/</link><description>Recent content in error on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Thu, 28 Jul 2022 17:20:00 +0800</lastBuildDate><atom:link href="/tags/error/index.xml" rel="self" type="application/rss+xml"/><item><title>处理 Go 中的 'connection reset by peer' 错误</title><link>/2022/07/28/connection-reset-by-peer/</link><pubDate>Thu, 28 Jul 2022 17:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2022/07/28/connection-reset-by-peer/</guid><description>原文链接：https://gosamples.dev/connection-reset-by-peer/ 这connection reset by peer是在另一端（对等方）意外关闭连接时发生的TCP/IP错误。 当你从你的一端发送一个数据包，但另一端崩溃并强行关闭与RST 数据包的连接而不是TCP FIN 正常情况下用于关闭连接的连接时，就会发生这种情况。在 Go 中，您可以connection reset by peer通过检查对等方返回的错误是否等于 来检测syscall.ECONNRESET 。
重现connection reset by peer错误 我们可以通过创建执行以下操作的服务器和客户端来重现错误：
服务器读取一个字节然后关闭连接 客户端发送超过一个字节 如果服务器使用套接字接收缓冲区中的剩余字节关闭连接，则RST向客户端发送一个数据包。当客户端试图从这样一个关闭的连接中读取时，它会得到connection reset by peer错误。
请参阅以下示例，该示例模拟了此行为。
package main import ( &amp;quot;errors&amp;quot; &amp;quot;log&amp;quot; &amp;quot;net&amp;quot; &amp;quot;os&amp;quot; &amp;quot;syscall&amp;quot; &amp;quot;time&amp;quot; ) func server() { listener, err := net.Listen(&amp;quot;tcp&amp;quot;, &amp;quot;:8080&amp;quot;) if err != nil { log.Fatal(err) } defer listener.Close() conn, err := listener.Accept() if err != nil { log.Fatal(&amp;quot;server&amp;quot;, err) os.Exit(1) } data := make([]byte, 1) if _, err := conn.</description></item></channel></rss>