<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redis cluster on lbbniu</title><link>/tags/redis-cluster/</link><description>Recent content in redis cluster on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Sun, 26 Mar 2023 15:20:00 +0800</lastBuildDate><atom:link href="/tags/redis-cluster/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis Cluster vs Codis Slot Rebalance 算法</title><link>/2023/03/26/redis-cluster-vs-codis-slot-rebalance-%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 26 Mar 2023 15:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2023/03/26/redis-cluster-vs-codis-slot-rebalance-%E7%AE%97%E6%B3%95/</guid><description>Redis Cluster Slot Rebalance算法 迁移原则 尽可能的均匀分配Slots； 尽量减少迁移的Slots的数量； Slots分配方案 计算集群的总权重，节点数量； 计算每个集群节点需要移出或移入的槽数，balance 如果为正数代表需要移出的槽数，如果为负数代表需要出入槽数； 把weightedNodes 根据 balance 排序从小到大； 执行槽位移动，并更新集群节点 balance； 代码实现 static int clusterManagerCommandRebalance(int argc, char **argv) { int port = 0; char *ip = NULL; clusterManagerNode **weightedNodes = NULL; list *involved = NULL; if (!getClusterHostFromCmdArgs(argc, argv, &amp;amp;ip, &amp;amp;port)) goto invalid_args; clusterManagerNode *node = clusterManagerNewNode(ip, port, 0); if (!clusterManagerLoadInfoFromNode(node)) return 0; int result = 1, i; if (config.cluster_manager_command.weight != NULL) { for (i = 0; i &amp;lt; config.cluster_manager_command.weight_argc; i++) { char *name = config.</description></item></channel></rss>