<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lua on lbbniu</title><link>/tags/lua/</link><description>Recent content in lua on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Sat, 20 Nov 2021 17:18:16 +0800</lastBuildDate><atom:link href="/tags/lua/index.xml" rel="self" type="application/rss+xml"/><item><title>nginx lua直接阶段</title><link>/2021/11/20/nginx-lua%E7%9B%B4%E6%8E%A5%E9%98%B6%E6%AE%B5/</link><pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2021/11/20/nginx-lua%E7%9B%B4%E6%8E%A5%E9%98%B6%E6%AE%B5/</guid><description>对刚接触Ngx_lua的读者来说，可能会存在下面两个困惑。
1、Lua在Nginx的哪些阶段可以执行代码？ 2、Lua在Nginx的每个阶段可以执行哪些操作？
只有理解了这两个问题，才能在业务中巧妙地利用Ngx_Lua来完成各项需求。
Nginx的11个执行阶段，每个阶段都有自己能够执行的指令，并可以实现不同的功能。Ngx_Lua的功能大部分是基于Nginx这11个执行阶段开发和配置的，Lua代码在这些指令块中执行，并依赖于它们的执行顺序。本章将对Ngx_Lua的执行阶段进行一一讲解。
一、 init_by_lua_block init_by_lua_block是init_by_lua的替代版本，在OpenResty 1.9.3.1或Lua-Nginx-Modulev 0.9.17之前使用的都是init_by_lua。init_by_lua_block比init_by_lua更灵活，所以建议优先选用init_by_lua_block。 本章中的执行阶段都采用*_block格式的指令，后续不再说明。
1.1　阶段说明 语法：init_by_lua_block {lua-script-str} 配置环境：http 阶段：loading-config 含义：当Nginx的master进程加载Nginx配置文件（加载或重启Nginx进程）时，会在全局的Lua VM（Virtual Machine，虚拟机）层上运行 指定的代码，每次当Nginx获得HUP（即Hangup）重载信号加载进程时，代码都会被重新执行。
1.2　初始化配置 在loading-config阶段一般会执行如下操作。 1．初始化Lua全局变量，特别适合用来处理在启动master进程时就要求存在的数据，对CPU消耗较多的功能也可以在此处处理。 2．预加载模块。 3．初始化lua_shared_dict共享内存的数据（关于共享内存详见第10章）。 示例如下：
user webuser webuser; worker_processes 1; worker_rlimit_nofile 10240; events { use epoll; worker_connections 10240; } http { include mime.types; default_type application/octet-stream; log_format main '$remote_addr-$remote_user[$time_local] &amp;quot;$request&amp;quot; ' '$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; ' '&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot; &amp;quot;$request_time&amp;quot; &amp;quot;$upstream_addr $upstream_status $upstream_response_time&amp;quot; &amp;quot;upstream_time_sum:$upstream_time_sum&amp;quot; &amp;quot;jk_uri:$jk_uri&amp;quot;'; access_log logs/access.log main; sendfile on; keepalive_timeout 65; lua_package_path &amp;quot;/usr/local/nginx_1.12.2/conf/lua_modules/?.lua;;&amp;quot;; lua_package_cpath &amp;quot;/usr/local/nginx_1.</description></item></channel></rss>