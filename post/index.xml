<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on lbbniu</title>
    <link>https://blog.lbbniu.com/post/</link>
    <description>Recent content in Posts on lbbniu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor>
    <webMaster>lbbniu@gmail.com (lbbniu)</webMaster>
    <copyright>(c) 2021 lbbniu.</copyright>
    <lastBuildDate>Sat, 20 Nov 2021 17:18:16 +0800</lastBuildDate><atom:link href="https://blog.lbbniu.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker修改默认网段</title>
      <link>https://blog.lbbniu.com/2021/11/20/docker%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%BD%91%E6%AE%B5/</link>
      <pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate>
      <author>lbbniu@gmail.com (lbbniu)</author>
      <guid>https://blog.lbbniu.com/2021/11/20/docker%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%BD%91%E6%AE%B5/</guid>
      <description>(03-25) 892. 三维形体的表面积 class Solution { /** * @param Integer[][] $grid * @return Integer */ function surfaceArea($grid) { $n = count($grid); $area = 0; for ($i = 0; $i &amp;lt; $n; $i++) { for ($j = 0; $j &amp;lt; $n; $j++) { $level = $grid[$i][$j]; if ($level &amp;gt; 0) { //贡献的面积 &amp;lt;&amp;lt; 2 相当于 * 4  $area += 2 + ($level &amp;lt;&amp;lt; 2); //减去重合的面积 &amp;lt;&amp;lt; 1 相当于 * 2  $area -= $i &amp;gt; 0 ?</description>
    </item>
    
    <item>
      <title>fabric一些简单用法总结</title>
      <link>https://blog.lbbniu.com/2021/11/20/fabric%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate>
      <author>lbbniu@gmail.com (lbbniu)</author>
      <guid>https://blog.lbbniu.com/2021/11/20/fabric%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/</guid>
      <description>1.支持中文
#!/usr/bin/python env # -*- coding: utf-8 -*- 2.支持颜色
from fabric.colors import * print(red(&amp;#34;红色&amp;#34;) + green(&amp;#34;绿色&amp;#34;，bold=False) + blue(&amp;#34;蓝色&amp;#34;,bold=True) + white(&amp;#34;白色&amp;#34;) + yellow(&amp;#34;黄色&amp;#34;) + cyan(&amp;#34;蓝绿色&amp;#34;) + magenta(&amp;#34;品红色&amp;#34;)) 3.设置主机组及账号密码
主机密码不同时：
env.hosts = [&amp;#39;tomcat@192.168.244.128&amp;#39;,&amp;#39;tomcat@192.168.244.129&amp;#39;] env.passwords = {&amp;#39;tomcat@192.168.244.128:22&amp;#39;:&amp;#39;111111&amp;#39;,&amp;#39;tomcat@192.168.244.129:22&amp;#39;:&amp;#39;111111&amp;#39;} 主机密码相同时:
env.hosts=[ &amp;#39;tomcat@192.168.244.128:22&amp;#39;, &amp;#39;tomcat@192.168.244.129:22&amp;#39;, ] env.password = &amp;#39;1111&amp;#39; 使用ssh keyfile:
env.key_filename = [&amp;#39;/opt/fab/server_key&amp;#39;] env.user = &amp;#39;tomcat&amp;#39; env.password = &amp;#39;111111&amp;#39; env.port = &amp;#39;2862&amp;#39; 4.运行shell命令
在本地运行命令:
local(&amp;#39;pwd&amp;#39;) local(&amp;#39;set -m ; /etc/init.d/tomcat restart&amp;#39;) # 如果是脚本，要加set -m 支持后台执行并返回状态，否则会报错 在服务器上运行命令:
run(&amp;#39;uname -a&amp;#39;) 5.</description>
    </item>
    
    <item>
      <title>nginx lua直接阶段</title>
      <link>https://blog.lbbniu.com/2021/11/20/nginx-lua%E7%9B%B4%E6%8E%A5%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate>
      <author>lbbniu@gmail.com (lbbniu)</author>
      <guid>https://blog.lbbniu.com/2021/11/20/nginx-lua%E7%9B%B4%E6%8E%A5%E9%98%B6%E6%AE%B5/</guid>
      <description>对刚接触Ngx_lua的读者来说，可能会存在下面两个困惑。
 1、Lua在Nginx的哪些阶段可以执行代码？ 2、Lua在Nginx的每个阶段可以执行哪些操作？
只有理解了这两个问题，才能在业务中巧妙地利用Ngx_Lua来完成各项需求。
Nginx的11个执行阶段，每个阶段都有自己能够执行的指令，并可以实现不同的功能。Ngx_Lua的功能大部分是基于Nginx这11个执行阶段开发和配置的，Lua代码在这些指令块中执行，并依赖于它们的执行顺序。本章将对Ngx_Lua的执行阶段进行一一讲解。
 一、 init_by_lua_block init_by_lua_block是init_by_lua的替代版本，在OpenResty 1.9.3.1或Lua-Nginx-Modulev 0.9.17之前使用的都是init_by_lua。init_by_lua_block比init_by_lua更灵活，所以建议优先选用init_by_lua_block。 本章中的执行阶段都采用*_block格式的指令，后续不再说明。
1.1　阶段说明 语法：init_by_lua_block {lua-script-str} 配置环境：http 阶段：loading-config 含义：当Nginx的master进程加载Nginx配置文件（加载或重启Nginx进程）时，会在全局的Lua VM（Virtual Machine，虚拟机）层上运行指定的代码，每次当Nginx获得HUP（即Hangup）重载信号加载进程时，代码都会被重新执行。
*1.2　初始化配置* 在loading-config阶段一般会执行如下操作。 1．初始化Lua全局变量，特别适合用来处理在启动master进程时就要求存在的数据，对CPU消耗较多的功能也可以在此处处理。 2．预加载模块。 3．初始化lua_shared_dict共享内存的数据（关于共享内存详见第10章）。 示例如下：
user webuser webuser; worker_processes 1; worker_rlimit_nofile 10240; events { use epoll; worker_connections 10240; } http { include mime.types; default_type application/octet-stream; log_format main &#39;$remote_addr-$remote_user[$time_local] &amp;quot;$request&amp;quot; &#39; &#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &#39; &#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot; &amp;quot;$request_time&amp;quot; &amp;quot;$upstream_addr $upstream_status $upstream_response_time&amp;quot; &amp;quot;upstream_time_sum:$upstream_time_sum&amp;quot; &amp;quot;jk_uri:$jk_uri&amp;quot;&#39;; access_log logs/access.log main; sendfile on; keepalive_timeout 65; lua_package_path &amp;quot;/usr/local/nginx_1.</description>
    </item>
    
    <item>
      <title>OpenVpn搭建</title>
      <link>https://blog.lbbniu.com/2021/11/20/openvpn%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate>
      <author>lbbniu@gmail.com (lbbniu)</author>
      <guid>https://blog.lbbniu.com/2021/11/20/openvpn%E6%90%AD%E5%BB%BA/</guid>
      <description>初始化 # 证书密码见服务器 mm.md # 创建目录 mkdir -p /data/openvpn/conf # 初始化 openvpn 配置 docker run -v /data/openvpn:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://vpn.lbbniu.com # 初始化证书 根据提示数据证书密码和组织名称 docker run -v /data/openvpn:/etc/openvpn --rm -ti kylemanna/openvpn ovpn_initpki # 增加用户 docker run -v /data/openvpn:/etc/openvpn --rm -ti kylemanna/openvpn easyrsa build-client-full lbbniu nopass # 导出用户配置文件 docker run -v /data/openvpn:/etc/openvpn --rm -ti kylemanna/openvpn ovpn_getclient lbbniu &amp;gt; /data/openvpn/conf/lbbniu.ovpn # 启动服务 docker run --name openvpn -v /data/openvpn:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn 添加用户脚本 #!</description>
    </item>
    
    <item>
      <title>微明互动参与项目列表</title>
      <link>https://blog.lbbniu.com/2021/11/20/%E5%BE%AE%E6%98%8E%E4%BA%92%E5%8A%A8%E5%8F%82%E4%B8%8E%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8/</link>
      <pubDate>Sat, 20 Nov 2021 17:18:16 +0800</pubDate>
      <author>lbbniu@gmail.com (lbbniu)</author>
      <guid>https://blog.lbbniu.com/2021/11/20/%E5%BE%AE%E6%98%8E%E4%BA%92%E5%8A%A8%E5%8F%82%E4%B8%8E%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8/</guid>
      <description>2014-2016项目 云热卖 app38 联联 app45 李宁酷跑 app46 htc新渴望 app47 沃尔玛动态贺卡生成器 app49 联信 app50 第九屏 app52/d9ping htc新渴望8 app53 六推云平台 app54 搜狗极限科考 app55 360安全第一 app57 红旗 app59 海尔智慧答题 app60 多喜爱手机端 app61 联想thinkpad app62 斯巴鲁汽车 app64 联想thinkpad 联想禁止随地办公 app66 苏泊尔厨具 app70 亚马逊2048 app71 王老吉疯狂2048 app73 联想刮刮乐 app74 淘手游网站改版（YII框架） 巴布豆（手机和pc） app75 htc one m8申请 app76 高德地图lbs大赛 app77 htc one预约（手机和pc） app78 华为Meta7手机 app79 51jobs统计数据 app80 海尔口袋体验馆 app81 丰田一期 相信自己 app83 htc五月天 app84 海尔问题查询 app85 丰田二期项目 app86 特百惠 app87 特百惠外带小萌 app89 一汽大众 app90 搜狗手机活动项目 app91 全球购 微信项目（微信支付） app92 thinkphp intel大赛项目 app94 联通邀请函 app95 百佳手机 app96 IBM下载中心 app97 2015.</description>
    </item>
    
  </channel>
</rss>
