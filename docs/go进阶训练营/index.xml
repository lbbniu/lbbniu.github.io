<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go进阶训练营 on lbbniu</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/</link><description>Recent content in Go进阶训练营 on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Tue, 01 Mar 2022 13:20:00 +0800</lastBuildDate><atom:link href="/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/index.xml" rel="self" type="application/rss+xml"/><item><title>第01周：微服务</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week01/</link><pubDate>Tue, 25 Jan 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week01/</guid><description>Golang 基础语法和 Web 框架起步 代码地址：flycash/toy-web: 用于极客时间 go 基础课程 (github.com)
关注公众号获得更多精彩文章</description></item><item><title>Go进阶训练班营</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/0%E6%9C%9F%E7%AD%94%E7%96%91/</link><pubDate>Tue, 23 Nov 2021 10:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/0%E6%9C%9F%E7%AD%94%E7%96%91/</guid><description>1期答疑 整理
第一周答疑文档 https://shimo.im/docs/prWppTp6qKPgrHwY 第二周答疑文档 https://shimo.im/docs/J8yqjXTpQ9Jq6yHP 第三周答疑文档 https://shimo.im/docs/QwCpDVXgctQKhrq3 第四章答疑文档 https://shimo.im/docs/cTrTCpk8d69Vh8Tv 四期领教：https://shimo.im/docs/ckKygv6yRkXD3C8D
大明面试八股文：
https://github.com/flycash/interview-baguwen 关注公众号获得更多精彩文章</description></item><item><title>第02周：异常处理</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week02/</link><pubDate>Tue, 25 Jan 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week02/</guid><description>本周作业（必交） 我们在数据库操作的时候，比如 dao 层中当遇到一个 sql.ErrNoRows 的时候，是否应该 Wrap 这个 error，抛给上层。为什么，应该怎么做请写出代码？ References https://www.infoq.cn/news/2012/11/go-error-handle/ https://golang.org/doc/faq#exceptions https://www.ardanlabs.com/blog/2014/10/error-handling-in-go-part-i.html https://www.ardanlabs.com/blog/2014/11/error-handling-in-go-part-ii.html https://www.ardanlabs.com/blog/2017/05/design-philosophy-on-logging.html https://medium.com/gett-engineering/error-handling-in-go-53b8a7112d04 https://medium.com/gett-engineering/error-handling-in-go-1-13-5ee6d1e0a55c https://rauljordan.com/2020/07/06/why-go-error-handling-is-awesome.html https://morsmachine.dk/error-handling https://crawshaw.io/blog/xerrors https://dave.cheney.net/2012/01/18/why-go-gets-exceptions-right https://dave.cheney.net/2015/01/26/errors-and-exceptions-redux https://dave.cheney.net/2014/11/04/error-handling-vs-exceptions-redux https://dave.cheney.net/2014/12/24/inspecting-errors https://dave.cheney.net/2016/04/07/constant-errors https://dave.cheney.net/2019/01/27/eliminate-error-handling-by-eliminating-errors https://dave.cheney.net/2016/06/12/stack-traces-and-the-errors-package https://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully https://blog.golang.org/errors-are-values https://blog.golang.org/error-handling-and-go https://blog.golang.org/go1.13-errors https://commandcenter.blogspot.com/2017/12/error-handling-in-upspin.html 关注公众号获得更多精彩文章</description></item><item><title>第03周：并行编程</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week03/</link><pubDate>Tue, 25 Jan 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week03/</guid><description>本周作业（必交） 基于 errgroup 实现一个 http server 的启动和关闭 ，以及 linux signal 信号的注册和处理，要保证能够一个退出，全部注销退出。 References https://www.ardanlabs.com/blog/2018/11/goroutine-leaks-the-forgotten-sender.html https://www.ardanlabs.com/blog/2019/04/concurrency-trap-2-incomplete-work.html https://www.ardanlabs.com/blog/2014/01/concurrency-goroutines-and-gomaxprocs.html https://dave.cheney.net/practical-go/presentations/qcon-china.html#_concurrency https://golang.org/ref/mem https://blog.csdn.net/caoshangpa/article/details/78853919 https://blog.csdn.net/qcrao/article/details/92759907 https://cch123.github.io/ooo/ https://blog.golang.org/codelab-share https://dave.cheney.net/2018/01/06/if-aligned-memory-writes-are-atomic-why-do-we-need-the-sync-atomic-package http://blog.golang.org/race-detector https://dave.cheney.net/2014/06/27/ice-cream-makers-and-data-races https://www.ardanlabs.com/blog/2014/06/ice-cream-makers-and-data-races-part-ii.html https://medium.com/a-journey-with-go/go-how-to-reduce-lock-contention-with-the-atomic-package-ba3b2664b549 https://medium.com/a-journey-with-go/go-discovery-of-the-trace-package-e5a821743c3c https://medium.com/a-journey-with-go/go-mutex-and-starvation-3f4f4e75ad50 https://www.ardanlabs.com/blog/2017/10/the-behavior-of-channels.html https://medium.com/a-journey-with-go/go-buffered-and-unbuffered-channels-29a107c00268 https://medium.com/a-journey-with-go/go-ordering-in-select-statements-fd0ff80fd8d6 https://www.ardanlabs.com/blog/2017/10/the-behavior-of-channels.html https://www.ardanlabs.com/blog/2014/02/the-nature-of-channels-in-go.html https://www.ardanlabs.com/blog/2013/10/my-channel-select-bug.html https://blog.golang.org/io2013-talk-concurrency https://blog.golang.org/waza-talk https://blog.golang.org/io2012-videos https://blog.golang.org/concurrency-timeouts https://blog.golang.org/pipelines https://www.ardanlabs.com/blog/2014/02/running-queries-concurrently-against.html https://blogtitle.github.io/go-advanced-concurrency-patterns-part-3-channels/ https://www.ardanlabs.com/blog/2013/05/thread-pooling-in-go-programming.html https://www.ardanlabs.com/blog/2013/09/pool-go-routines-to-process-task.html https://blogtitle.github.io/categories/concurrency/ https://medium.com/a-journey-with-go/go-context-and-cancellation-by-propagation-7a808bbc889c https://blog.golang.org/context https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html https://golang.org/ref/spec#Channel_types https://drive.google.com/file/d/1nPdvhB0PutEJzdCq5ms6UI58dp50fcAN/view https://medium.com/a-journey-with-go/go-context-and-cancellation-by-propagation-7a808bbc889c https://blog.golang.org/context https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html https://golang.org/doc/effective_go.html#concurrency https://zhuanlan.zhihu.com/p/34417106?hmsr=toutiao.io https://talks.golang.org/2014/gotham-context.slide#1 https://medium.com/@cep21/how-to-correctly-use-context-context-in-go-1-7-8f2c0fafdf39 关注公众号获得更多精彩文章</description></item><item><title>第04周：Go工程化实践</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week04/</link><pubDate>Tue, 15 Feb 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week04/</guid><description>本周作业（必交） 按照自己的构想，写一个项目满足基本的目录结构和工程，代码需要包含对数据层、业务层、API 注册，以及 main 函数对于服务的注册和启动，信号处理，使用 Wire 构建依赖。可以使用自己熟悉的框架。 References https://www.ardanlabs.com/blog/2017/02/package-oriented-design.html https://www.ardanlabs.com/blog/2017/02/design-philosophy-on-packaging.html https://github.com/golang-standards/project-layout https://github.com/golang-standards/project-layout/blob/master/README_zh.md https://www.cnblogs.com/zxf330301/p/6534643.html https://blog.csdn.net/k6T9Q8XKs6iIkZPPIFq/article/details/109192475?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160561008419724839224387%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id=160561008419724839224387&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v28-6-109192475.first_rank_ecpm_v3_pc_rank_v2&amp;amp;utm_term=阿里技术专家详解DDD系列&amp;amp;spm=1018.2118.3001.4449 https://blog.csdn.net/chikuai9995/article/details/100723540?biz_id=102&amp;amp;utm_term=阿里技术专家详解DDD系列&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-100723540&amp;amp;spm=1018.2118.3001.4449 https://blog.csdn.net/Taobaojishu/article/details/101444324?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160561008419724838528569%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id=160561008419724838528569&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-101444324.first_rank_ecpm_v3_pc_rank_v2&amp;amp;utm_term=阿里技术专家详解DDD系列&amp;amp;spm=1018.2118.3001.4449 https://blog.csdn.net/taobaojishu/article/details/106152641 https://cloud.google.com/apis/design/errors https://kb.cnblogs.com/page/520743/ https://zhuanlan.zhihu.com/p/105466656 https://zhuanlan.zhihu.com/p/105648986 https://zhuanlan.zhihu.com/p/106634373 https://zhuanlan.zhihu.com/p/107347593 https://zhuanlan.zhihu.com/p/109048532 https://zhuanlan.zhihu.com/p/110252394 https://www.jianshu.com/p/dfa427762975 https://www.citerus.se/go-ddd/ https://www.citerus.se/part-2-domain-driven-design-in-go/ https://www.citerus.se/part-3-domain-driven-design-in-go/ https://www.jianshu.com/p/dfa427762975 https://www.jianshu.com/p/5732b69bd1a1 https://www.cnblogs.com/qixuejia/p/10789612.html https://www.cnblogs.com/qixuejia/p/4390086.html https://www.cnblogs.com/qixuejia/p/10789621.html https://zhuanlan.zhihu.com/p/46603988 https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis https://commandcenter.blogspot.com/2014/01/self-referential-functions-and-design.html https://blog.csdn.net/taobaojishu/article/details/106152641 https://apisyouwonthate.com/blog/creating-good-api-errors-in-rest-graphql-and-grpc https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html https://www.youtube.com/watch?v=oL6JBUk6tj0 https://github.com/zitryss/go-sample https://github.com/danceyoung/paper-code/blob/master/package-oriented-design/packageorienteddesign.md https://medium.com/@eminetto/clean-architecture-using-golang-b63587aa5e3f https://hackernoon.com/golang-clean-archithecture-efd6d7c43047 https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1 https://medium.com/wtf-dial/wtf-dial-domain-model-9655cd523182 https://hackernoon.com/golang-clean-archithecture-efd6d7c43047 https://hackernoon.com/trying-clean-architecture-on-golang-2-44d615bf8fdf https://manuel.kiessling.net/2012/09/28/applying-the-clean-architecture-to-go-applications/ https://github.com/katzien/go-structure-examples https://www.youtube.com/watch?v=MzTcsI6tn-0 https://www.appsdeveloperblog.com/dto-to-entity-and-entity-to-dto-conversion/ https://travisjeffery.com/b/2019/11/i-ll-take-pkg-over-internal/ https://github.com/google/wire/blob/master/docs/best-practices.md https://github.com/google/wire/blob/master/docs/guide.md https://blog.golang.org/wire https://github.com/google/wire https://www.ardanlabs.com/blog/2019/03/integration-testing-in-go-executing-tests-with-docker.html https://www.ardanlabs.com/blog/2019/10/integration-testing-in-go-set-up-and-writing-tests.html https://blog.golang.org/examples https://blog.golang.org/subtests https://blog.golang.org/cover https://blog.golang.org/module-compatibility https://blog.golang.org/v2-go-modules https://blog.golang.org/publishing-go-modules https://blog.golang.org/module-mirror-launch https://blog.golang.org/migrating-to-go-modules https://blog.golang.org/using-go-modules https://blog.golang.org/modules2019 https://blog.codecentric.de/en/2017/08/gomock-tutorial/ https://pkg.go.dev/github.com/golang/mock/gomock https://medium.com/better-programming/a-gomock-quick-start-guide-71bee4b3a6f1 关注公众号获得更多精彩文章</description></item><item><title>第05周：微服务可用性设计</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week05/</link><pubDate>Tue, 15 Feb 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week05/</guid><description>本周作业（必交） 参考 Hystrix 实现一个滑动窗口计数器。 References http://www.360doc.com/content/16/1124/21/31263000_609259745.shtml http://www.infoq.com/cn/articles/basis-frameworkto-implement-micro-service/ http://www.infoq.com/cn/news/2017/04/linkerd-celebrates-one-year https://medium.com/netflix-techblog/netflix-edge-load-balancing-695308b5548c https://mp.weixin.qq.com/s?__biz=MzAwNjQwNzU2NQ==&amp;mid=402841629&amp;idx=1&amp;sn=f598fec9b370b8a6f2062233b31122e0&amp;mpshare=1&amp;scene=23&amp;srcid=0404qP0fH8zRiIiFzQBiuzuU#rd https://mp.weixin.qq.com/s?__biz=MzIzMzk2NDQyMw==&amp;mid=2247486641&amp;idx=1&amp;sn=1660fb41b0c5b8d8d6eacdfc1b26b6a6&amp;source=41#wechat_redirect https://blog.acolyer.org/2018/11/16/overload-control-for-scaling-wechat-microservices/ https://www.cs.columbia.edu/~ruigu/papers/socc18-final100.pdf https://github.com/alibaba/Sentinel/wiki/系统负载保护 https://blog.csdn.net/okiwilldoit/article/details/81738782 http://alex-ii.github.io/notes/2019/02/13/predictive_load_balancing.html https://blog.csdn.net/m0_38106113/article/details/81542863 关注公众号获得更多精彩文章</description></item><item><title>第06周：评论系统架构设计</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week06/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week06/</guid><description>关注公众号获得更多精彩文章</description></item><item><title>第07周：历史记录架构设计</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week07/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week07/</guid><description>hbase https://www.jianshu.com/p/b23800d9b227 https://zhuanlan.zhihu.com/p/145551967 https://cloud.tencent.com/developer/article/1632053 http://abloz.com/hbase/book.html#quickstart 关注公众号获得更多精彩文章</description></item><item><title>第08周：分布式缓存 &amp; 分布式事务</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week08/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week08/</guid><description>本周作业（必交） 使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能。 写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间。 关注公众号获得更多精彩文章</description></item><item><title>第九周：Go语言实践-网络编程</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week09/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week09/</guid><description>本周作业（必交） 总结几种 socket 粘包的解包方式：fix length/delimiter based/length field based frame decoder。尝试举例其应用。 实现一个从 socket connection 中解码出 goim 协议的解码器。 关注公众号获得更多精彩文章</description></item><item><title>第十周：日志&amp;指标&amp;链路追踪</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week10/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week10/</guid><description>关注公众号获得更多精彩文章</description></item><item><title>第十一周：DNS &amp; CDN &amp; 多活架构</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week11/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week11/</guid><description>关注公众号获得更多精彩文章</description></item><item><title>第十二周：消息队列 - Kafka</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week12/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week12/</guid><description>关注公众号获得更多精彩文章</description></item><item><title>第十三周：Go语言实践-Runtime</title><link>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week13/</link><pubDate>Tue, 01 Mar 2022 13:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/docs/go%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/week13/</guid><description>毕业项目 对当下自己项目中的业务，进行一个微服务改造，需要考虑如下技术点：
微服务架构（BFF、Service、Admin、Job、Task 分模块） API 设计（包括 API 定义、错误码规范、Error 的使用） gRPC 的使用 Go 项目工程化（项目结构、DI、代码分层、ORM 框架） 并发的使用（errgroup 的并行链路请求） 微服务中间件的使用（ELK、Opentracing、Prometheus、Kafka） 缓存的使用优化（一致性处理、Pipeline 优化） 关注公众号获得更多精彩文章</description></item></channel></rss>