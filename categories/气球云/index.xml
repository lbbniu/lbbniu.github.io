<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>气球云 on lbbniu</title><link>/categories/%E6%B0%94%E7%90%83%E4%BA%91/</link><description>Recent content in 气球云 on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Tue, 24 Oct 2023 15:20:00 +0800</lastBuildDate><atom:link href="/categories/%E6%B0%94%E7%90%83%E4%BA%91/index.xml" rel="self" type="application/rss+xml"/><item><title>气球云key解密核心js代码</title><link>/2023/10/24/qiqiuyun/</link><pubDate>Tue, 24 Oct 2023 15:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2023/10/24/qiqiuyun/</guid><description>let key = new Uint8Array([51, 56, 98, 53, 55, 109, 54, 101, 102, 121, 52, 48, 54, 112, 52, 52, 99, 114, 51, 48]) Q = &amp;quot;a&amp;quot;.charCodeAt(0) J = function(e, t) { var r = []; return t.split(&amp;quot;-&amp;quot;).map((function(t) { r.push(e.getUint8(parseInt(t))) })),r } // &amp;quot;2&amp;quot; == this.hls.config.version function decryptKey2(e) { var t; if (20 === e.byteLength) { var r = (t = new DataView(e,0)).getUint8(0) , i = String.fromCharCode(r).toLowerCase() , a = parseInt(i, 36) % 2 , n = t.</description></item></channel></rss>