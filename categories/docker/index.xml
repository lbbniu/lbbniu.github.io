<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on lbbniu</title><link>/categories/docker/</link><description>Recent content in docker on lbbniu</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>lbbniu@gmail.com (lbbniu)</managingEditor><webMaster>lbbniu@gmail.com (lbbniu)</webMaster><copyright>&amp;copy; 2021 &lt;a href="https://blog.lbbniu.com/">lbbniu&lt;/a></copyright><lastBuildDate>Wed, 06 Apr 2022 13:00:48 +0800</lastBuildDate><atom:link href="/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>使用docker搭建 tars 开发环境</title><link>/2022/02/15/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BA-tars-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 15 Feb 2022 15:20:00 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/2022/02/15/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BA-tars-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>docker pull tarscloud/framework docker run -d --net=host -e MYSQL_HOST=xxxxx -e MYSQL_ROOT_PASSWORD=xxxxx \ -eREBUILD=false -eINET=eth0 -eSLAVE=false \ -v/data/tars:/data/tars \ -v/etc/localtime:/etc/localtime \ tarscloud/framework # custom docker run -d -eMYSQL_HOST=192.168.1.10 -eMYSQL_USER=root -p 3000:3000 -p 18993:18993 \ -eMYSQL_ROOT_PASSWORD=lbbniu@yang0321 \ -eREBUILD=true -eINET=eth0 -eSLAVE=false \ --name tarsframework \ tarscloud/framework docker run -d -eMYSQL_HOST=10.14.166.155 -eMYSQL_USER=root -p 3000:3000 \ -eMYSQL_ROOT_PASSWORD=123456 \ -eREBUILD=false -eINET=eth0 -eSLAVE=false \ --name tarsframework \ tarscloud/framework docker run -ti --rm tarscloud/framework bash docker pull tarscloud/tars docker run -d --net=host -e MYSQL_HOST=xxxxx -e MYSQL_ROOT_PASSWORD=xxxxx \ -eREBUILD=false -eINET=eth0 -eSLAVE=false \ -v/data/tars:/data/tars \ -v/etc/localtime:/etc/localtime \ tarscloud/tars # custom docker run -d --net=host -e MYSQL_HOST=xxxxx -e MYSQL_ROOT_PASSWORD=xxxxx \ -eREBUILD=false -eINET=eth0 -eSLAVE=false \ -v/data/tars:/data/tars \ -v/etc/localtime:/etc/localtime \ tarscloud/tars docker run -d \ --name=tars-framework \ --net=host \ -e MYSQL_HOST=&amp;quot;10.</description></item><item><title>使用 Docker 在 1 分钟内完成 ClickHouse 服务器</title><link>/cloud-native/docker/clickhouse-server-in-1-minute-with-docker/</link><pubDate>Wed, 06 Apr 2022 13:00:48 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/cloud-native/docker/clickhouse-server-in-1-minute-with-docker/</guid><description>ClickHouse 是一个开源的面向列的 DBMS（由 Yandex 开发）。ClickHouse 的工作速度比传统方法快 100-1000 倍。 它适用于大数据、业务分析和时间序列数据。ClickHouse 是第一个与 Sybase IQ、Vertica 和 Snowflake 等专有数据库的性能、成熟度和可扩展性相匹配的开源 SQL 数据仓库。
在这个小教程中，我将向您展示如何以最少的设置安装 ClickHouse。
对于本教程，我们需要安装 Docker 和 docker-compose。
首先，您需要创建一个目录，在其中创建必要的文件和目录。
cd /home/username mkdir my-clickhouse cd my-clickhouse 然后你需要创建一个目录来存储 ClickHouse 数据。
mkdir db 最后一步是创建 docker-compose.yml 文件。
version: '3' services: ch_server: image: yandex/clickhouse-server ports: - &amp;quot;8123:8123&amp;quot; volumes: - ./db:/var/lib/clickhouse networks: - ch_ntw ch_client: image: yandex/clickhouse-client entrypoint: - /bin/sleep command: - infinity networks: - ch_ntw networks: ch_ntw: driver: bridge ipam: config: - subnet: 10.222.1.0/24 让我们检查一下我们做了什么。一个文件（docker-compose.yml）和一个目录（db）。</description></item><item><title>使用Docker一分钟搭建免费VPN</title><link>/cloud-native/%E4%BD%BF%E7%94%A8docker%E4%B8%80%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9vpn/</link><pubDate>Fri, 17 Dec 2021 09:00:48 +0800</pubDate><author>lbbniu@gmail.com (lbbniu)</author><guid>/cloud-native/%E4%BD%BF%E7%94%A8docker%E4%B8%80%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9vpn/</guid><description>在这个简短的指南中，我将向您展示如何使用现有的 Docker 镜像快速安装 OpenVPN 服务器。可以安装 OpenVPN 服务器，但使用 Docker 一切都容易得多。您无需购买第三方服务，一切都是完全免费的。
您必须拥有自己的 VPS 服务器。如果没有，您可以在 DigitalOcean 上购买 VPS。您可以购买最便宜的，每月 2 美元到 5 美元不等。
我将使用基于 Docker 的现成 VPN 解决方案：https://github.com/kylemanna/docker-openvpn 第一步所需要做的就是安装 Docker。我使用 Ubuntu 操作系统。 如果安装了 Docker，让我们继续下一步。
我将使用以下变量：
ovpn-data-example-uk - 用于数据量容器。
vpn.yourdomain.com - 该值应该是域名或 IP 地址。
uk.vpn.yourdomain.com - 它将用作客户端定义。
这些变量是测试变量。你必须使用你的变量。
让我们从创建 docker 卷开始。
docker volume create -- name ovpn - data - example - uk 下一步是初始化容器。
docker run \ -v ovpn-data-example-uk:/etc/openvpn \ --log-driver=none \ --rm \ kylemanna/openvpn \ ovpn_genconfig \ -u udp://vpn.yourdomain.com 容器将要求您输入密码来保护新生成的证书颁发机构使用的私钥。</description></item></channel></rss>